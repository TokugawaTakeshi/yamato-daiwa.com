/*
 * @yamato-daiwa/frontend v1.0
 * (c) 2021 Sole proprietorship "Yamato Daiwa" Takeshi Tokugawa
 * Released under the MIT License.
 */
a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video {
  border: 0;
  font-size: 100%;
  margin: 0;
  padding: 0;
  vertical-align: baseline;
}
article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section {
  display: block;
}
h1,h2,h3,h4,h5,h6 {
  font-weight: 400;
}
body {
  line-height: 1;
}
ol,ul {
  list-style: none;
}
a {
  color: #000;
  outline: none;
  text-decoration: none;
}
blockquote,q {
  quotes: none;
}
blockquote:after,blockquote:before,q:after,q:before {
  content: "";
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
th {
  font-weight: 400;
}
button:focus,input:focus,select:focus,textarea:focus {
  outline: none;
}
input {
  box-shadow: none;
}
hr {
  border-width: 0;
  margin: 0;
}
* {
  box-sizing: border-box;
}
body,html {
  height: 100%;
}
html {
  font-family: system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,Liberation Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;
  font-size: 14px;
  line-height: 1;
}
sub {
  vertical-align: sub;
}
sub,sup {
  font-size: 10px;
  margin-left: 1px;
}
sup {
  vertical-align: super;
}
.TopPage {
  font-family: Meiryo UI,sans-serif;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  max-height: 100%;
  max-width: 960px;
  min-width: 320px;
  overflow-y: auto;
  width: 100%;
}
.TopPage-HeroImage {
  background-repeat: no-repeat;
  background-size: cover;
}
@media (min-width:500px) {
  .TopPage-HeroImage {
    aspect-ratio: 19/6;
    background-image: url(Top/Images/HeroImage-WideScreens.png);
  }
}
@media (max-width:499px) {
  .TopPage-HeroImage {
    aspect-ratio: 4/3;
    background-image: url(Top/Images/HeroImage-NarrowScreens.png);
  }
}
.TopPage-BusinessCard {
  margin-top: 8px;
  padding-left: 12px;
  padding-right: 12px;
}
.TopPage-BusinessCard-TopHeading {
  color: #e65100;
  font-size: 28px;
  font-weight: 700;
}
.TopPage-BusinessCard-Slogan {
  color: #f57c00;
  font-size: 18px;
  font-weight: 700;
  line-height: 22px;
  margin-top: 6px;
  word-break: break-all;
}
.TopPage-BusinessCard-Slogan:before {
  content: "";
  display: block;
  margin-top: -2px;
}
.TopPage-BusinessCard-Slogan:after {
  content: "";
  display: block;
  margin-bottom: -2px;
}
.TopPage-BusinessCard-Metadata {
  grid-gap: 8px;
  display: grid;
  grid-template-columns: auto minmax(0, 1fr);
  margin-top: 12px;
}
.TopPage-BusinessCard-Metadata dt {
  color: #404040;
  font-weight: 700;
  text-align: right;
}
.TopPage-BusinessCard-Metadata dd {
  color: #606060;
  font-size: 14px;
  line-height: 18px;
  word-break: break-all;
}
.TopPage-BusinessCard-Metadata dd:before {
  content: "";
  display: block;
  margin-top: -2px;
}
.TopPage-BusinessCard-Metadata dd:after {
  content: "";
  display: block;
  margin-bottom: -2px;
}
.TopPage-BusinessCard-Metadata-Accent {
  color: #e65100;
  font-weight: 700;
}
.TopPage-BusinessCard-Metadata-Remark {
  color: #b0b0b0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9AeWFtYXRvLWRhaXdhL2Zyb250ZW5kL0Z1bmN0aW9uYWxpdHkuc3R5bCIsIlN0eWxlcy5jc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvQHlhbWF0by1kYWl3YS9mcm9udGVuZC9TdHlsZXMvMDItS2VybmVsLzA0LVN0eWxlc0luaXRpYWxpemF0aW9uL0Nyb3NzQnJvd3NlclN0eWxlc1Jlc2V0LnN0eWwiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvQHlhbWF0by1kYWl3YS9mcm9udGVuZC9TdHlsZXMvMDItS2VybmVsLzA0LVN0eWxlc0luaXRpYWxpemF0aW9uL0luaXRpYWxHbG9iYWxDU1NfUnVsZXMuc3R5bCIsIlN0eWxlcy5zdHlsIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B5YW1hdG8tZGFpd2EvZnJvbnRlbmQvU3R5bGVzLzAyLUtlcm5lbC8wMy1VdGlsaXR5TWl4aW5zLzA0LUxheW91dC9maWxsQm9keVZlcnRpY2FsbHkuc3R5bCIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9AeWFtYXRvLWRhaXdhL2Zyb250ZW5kL1N0eWxlcy8wMi1LZXJuZWwvMDMtVXRpbGl0eU1peGlucy8wNC1MYXlvdXQvQ2VudGVyZXIuc3R5bCIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9AeWFtYXRvLWRhaXdhL2Zyb250ZW5kL1N0eWxlcy8wMi1LZXJuZWwvMDMtVXRpbGl0eU1peGlucy8wMC1HZW5lcmFsVXRpbHMvYXBwbHlJZk5vdE51bGwuc3R5bCIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9AeWFtYXRvLWRhaXdhL2Zyb250ZW5kL1N0eWxlcy8wMi1LZXJuZWwvMDMtVXRpbGl0eU1peGlucy8wNS1UeXBvZ3JhcGh5VXRpbHMvTXVsdGlMaW5lVGV4dEVsZW1lbnRPdmVyZmxvd1NhZmV0eVdpdGhvdXRFeHRyYVNwYWNlQ2F1c2VkQnlMaW5lSGVpZ2h0LnN0eWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7RUNJRTtBQ0ZBO0VBb0ZFLFNBQU87RUFDUCxlQUFVO0VBSFYsU0FBTztFQUNQLFVBQVE7RUFHUix3QkFBZTtBREduQjtBQ0FFO0VBYUUsY0FBUTtBRENaO0FDRUU7RUFPRSxnQkFBWTtBRERoQjtBQ0lFO0VBRUUsY0FBWTtBREhoQjtBQ01FO0VBR0UsZ0JBQVc7QURMZjtBQ09FO0VBR0UsV0FBTTtFQUNOLGFBQVE7RUFGUixxQkFBZ0I7QURKcEI7QUNTRTtFQUdFLFlBQU87QURSWDtBQ1dJO0VBR0UsV0FBUTtBRFJkO0FDV0U7RUFFRSx5QkFBZ0I7RUFDaEIsaUJBQWU7QURWbkI7QUNhRTtFQUVFLGdCQUFZO0FEWmhCO0FDZ0JFO0VBS0UsYUFBUTtBRGZaO0FDbUJFO0VBRUUsZ0JBQVc7QURsQmY7QUNxQkU7RUFFRSxlQUFhO0VBQ2IsU0FBTztBRHBCWDtBRXpKRTtFQUVFLHNCQUFXO0FGMEpmO0FFdkpFO0VBR0UsWUFBTztBRndKWDtBRXJKRTtFQUVFLG1NQUFZO0VBQ1osZUFBVTtFQUNWLGNBQVk7QUZzSmhCO0FFbkpFO0VBR0UsbUJBQWU7QUZxSm5CO0FFakpFO0VBSEUsZUFBVTtFQUZWLGdCQUFZO0FGMkpoQjtBRXRKRTtFQUdFLHFCQUFlO0FGbUpuQjtBR3RLQTtFQUVFLGlDQUFxQjtFQ0dyQixZQUFPO0VDUVAsaUJBQVk7RUFDWixrQkFBYTtFRFJiLGdCQUFXO0VDS1gsZ0JBQTZCO0VBRDdCLGdCQUE2QjtFREMzQixnQkFBVztFQ0ZiLFdBQU07QUx3S1I7QUd6S0U7RUFjRSw0QkFBa0I7RUFEbEIsc0JBQWdCO0FIZ0twQjtBR3hLaUU7RUFBQTtJQWMzRCxrQkFBYTtJQUNiLDJEQUEyRDtFSDhKL0Q7QUFDRjtBRzFLcUU7RUFBQTtJQWdCL0QsaUJBQWE7SUFDYiw2REFBNkQ7RUg4SmpFO0FBQ0Y7QUc1SkU7RUFJRSxlQUFXO0VHNUNILGtCQUFHO0VBQUgsbUJBQUc7QU55TWY7QUcxSkk7RUFLRSxjQUFtQztFQUhuQyxlQUFVO0VBRVYsZ0JBQVk7QUgySmxCO0FHdkpJO0VBS0UsY0FBbUM7RUlPdkMsZUFBVTtFSlJOLGdCQUFZO0VJU2hCLGlCQUFZO0VKTlIsZUFBVztFSU9mLHFCQUFXO0FQaUpiO0FPdklJO0VBRUUsV0FBUTtFQUNSLGNBQVE7RUFDUixnQkFBVztBUHdJakI7QU9ySUk7RUFFRSxXQUFRO0VBQ1IsY0FBUTtFQUNSLG1CQUFjO0FQc0lwQjtBRy9KSTtFQUlFLGFBQVM7RUFGVCxhQUFRO0VBQ1IsMENBQXNCO0VBR3RCLGdCQUFXO0FIK0pqQjtBRzVKTTtFQUdFLGNBQXlDO0VBRHpDLGdCQUFZO0VBR1osaUJBQVc7QUg0Sm5CO0FHekpNO0VBSUUsY0FBeUM7RUluQi9DLGVBQVU7RUFDVixpQkFBWTtFQUNaLHFCQUFXO0FQNEtiO0FPbEtJO0VBRUUsV0FBUTtFQUNSLGNBQVE7RUFDUixnQkFBVztBUG1LakI7QU9oS0k7RUFFRSxXQUFRO0VBQ1IsY0FBUTtFQUNSLG1CQUFjO0FQaUtwQjtBR2xLTTtFQUdFLGNBQW1DO0VBRG5DLGdCQUFZO0FIb0twQjtBR2hLTTtFQUVFLGNBQXlDO0FIaUtqRCIsImZpbGUiOiJTdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIEB5YW1hdG8tZGFpd2EvZnJvbnRlbmQgdjEuMFxyXG4gKiAoYykgMjAyMSBTb2xlIHByb3ByaWV0b3JzaGlwIFwiWWFtYXRvIERhaXdhXCIgVGFrZXNoaSBUb2t1Z2F3YVxyXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5cclxuQHJlcXVpcmUgXCJTdHlsZXMvMDEtQXNzZXRzLnN0eWxcIlxyXG5AcmVxdWlyZSBcIlN0eWxlcy8wMi1LZXJuZWwuc3R5bFwiXHJcbkByZXF1aXJlIFwiU3R5bGVzLzAzLUJ1aWxkSW5QbHVnaW5zLnN0eWxcIlxyXG4iLCIvKlxuICogQHlhbWF0by1kYWl3YS9mcm9udGVuZCB2MS4wXG4gKiAoYykgMjAyMSBTb2xlIHByb3ByaWV0b3JzaGlwIFwiWWFtYXRvIERhaXdhXCIgVGFrZXNoaSBUb2t1Z2F3YVxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5odG1sLFxuYm9keSxcbmRpdixcbnNwYW4sXG5hcHBsZXQsXG5vYmplY3QsXG5pZnJhbWUsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxuYmxvY2txdW90ZSxcbnByZSxcbmEsXG5hYmJyLFxuYWNyb255bSxcbmFkZHJlc3MsXG5iaWcsXG5jaXRlLFxuY29kZSxcbmRlbCxcbmRmbixcbmVtLFxuaW1nLFxuaW5zLFxua2JkLFxucSxcbnMsXG5zYW1wLFxuc21hbGwsXG5zdHJpa2UsXG5zdHJvbmcsXG5zdWIsXG5zdXAsXG50dCxcbnZhcixcbmIsXG51LFxuaSxcbmNlbnRlcixcbmRsLFxuZHQsXG5kZCxcbm9sLFxudWwsXG5saSxcbmZpZWxkc2V0LFxuZm9ybSxcbmxhYmVsLFxubGVnZW5kLFxudGFibGUsXG5jYXB0aW9uLFxudGJvZHksXG50Zm9vdCxcbnRoZWFkLFxudHIsXG50aCxcbnRkLFxuYXJ0aWNsZSxcbmFzaWRlLFxuY2FudmFzLFxuZGV0YWlscyxcbmVtYmVkLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5vdXRwdXQsXG5ydWJ5LFxuc2VjdGlvbixcbnN1bW1hcnksXG50aW1lLFxubWFyayxcbmF1ZGlvLFxudmlkZW8ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMTtcbn1cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICMwMDA7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5ibG9ja3F1b3RlLFxucSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cbmJsb2NrcXVvdGU6YmVmb3JlLFxucTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xufVxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cbnRoIHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cbmlucHV0OmZvY3VzLFxuc2VsZWN0OmZvY3VzLFxudGV4dGFyZWE6Zm9jdXMsXG5idXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuaW5wdXQge1xuICBib3gtc2hhZG93OiBub25lO1xufVxuaHIge1xuICBib3JkZXItd2lkdGg6IDA7XG4gIG1hcmdpbjogMDtcbn1cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuaHRtbCxcbmJvZHkge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHN5c3RlbS11aSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBTZWdvZSBVSSwgUm9ib3RvLCBIZWx2ZXRpY2EgTmV1ZSwgQXJpYWwsIE5vdG8gU2FucywgTGliZXJhdGlvbiBTYW5zLCBzYW5zLXNlcmlmLCBBcHBsZSBDb2xvciBFbW9qaSwgU2Vnb2UgVUkgRW1vamksIFNlZ29lIFVJIFN5bWJvbCwgTm90byBDb2xvciBFbW9qaTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTtcbn1cbnN1YiB7XG4gIG1hcmdpbi1sZWZ0OiAxcHg7XG4gIHZlcnRpY2FsLWFsaWduOiBzdWI7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn1cbnN1cCB7XG4gIG1hcmdpbi1sZWZ0OiAxcHg7XG4gIHZlcnRpY2FsLWFsaWduOiBzdXBlcjtcbiAgZm9udC1zaXplOiAxMHB4O1xufVxuLlRvcFBhZ2Uge1xuICBmb250LWZhbWlseTogTWVpcnlvIFVJLCBzYW5zLXNlcmlmO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1heC1oZWlnaHQ6IDEwMCU7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4td2lkdGg6IDMyMHB4O1xuICBtYXgtd2lkdGg6IDk2MHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuLlRvcFBhZ2UtSGVyb0ltYWdlIHtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1MDBweCkge1xuICAuVG9wUGFnZS1IZXJvSW1hZ2Uge1xuICAgIGFzcGVjdC1yYXRpbzogMTkvNjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJUb3AvSW1hZ2VzL0hlcm9JbWFnZS1XaWRlU2NyZWVucy5wbmdcIik7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0OTlweCkge1xuICAuVG9wUGFnZS1IZXJvSW1hZ2Uge1xuICAgIGFzcGVjdC1yYXRpbzogNC8zO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIlRvcC9JbWFnZXMvSGVyb0ltYWdlLU5hcnJvd1NjcmVlbnMucG5nXCIpO1xuICB9XG59XG4uVG9wUGFnZS1CdXNpbmVzc0NhcmQge1xuICBwYWRkaW5nLWxlZnQ6IDEycHg7XG4gIHBhZGRpbmctcmlnaHQ6IDEycHg7XG4gIG1hcmdpbi10b3A6IDhweDtcbn1cbi5Ub3BQYWdlLUJ1c2luZXNzQ2FyZC1Ub3BIZWFkaW5nIHtcbiAgZm9udC1zaXplOiAyOHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICNlNjUxMDA7XG59XG4uVG9wUGFnZS1CdXNpbmVzc0NhcmQtU2xvZ2FuIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaW5lLWhlaWdodDogY2FsYygxOHB4ICsgNHB4KTtcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICNmNTdjMDA7XG4gIG1hcmdpbi10b3A6IDZweDtcbn1cbi5Ub3BQYWdlLUJ1c2luZXNzQ2FyZC1TbG9nYW46YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tdG9wOiBjYWxjKC0xICogY2FsYygoY2FsYygxOHB4ICsgNHB4KSAtIDE4cHgpIC8gMikpO1xufVxuLlRvcFBhZ2UtQnVzaW5lc3NDYXJkLVNsb2dhbjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogY2FsYygtMSAqIGNhbGMoKGNhbGMoMThweCArIDRweCkgLSAxOHB4KSAvIDIpKTtcbn1cbi5Ub3BQYWdlLUJ1c2luZXNzQ2FyZC1NZXRhZGF0YSB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byBtaW5tYXgoMCwgMWZyKTtcbiAgZ3JpZC1nYXA6IDhweDtcbiAgbWFyZ2luLXRvcDogMTJweDtcbn1cbi5Ub3BQYWdlLUJ1c2luZXNzQ2FyZC1NZXRhZGF0YSBkdCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzQwNDA0MDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4uVG9wUGFnZS1CdXNpbmVzc0NhcmQtTWV0YWRhdGEgZGQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiBjYWxjKDE0cHggKyA0cHgpO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG4gIGNvbG9yOiAjNjA2MDYwO1xufVxuLlRvcFBhZ2UtQnVzaW5lc3NDYXJkLU1ldGFkYXRhIGRkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogY2FsYygtMSAqIGNhbGMoKGNhbGMoMTRweCArIDRweCkgLSAxNHB4KSAvIDIpKTtcbn1cbi5Ub3BQYWdlLUJ1c2luZXNzQ2FyZC1NZXRhZGF0YSBkZDphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogY2FsYygtMSAqIGNhbGMoKGNhbGMoMTRweCArIDRweCkgLSAxNHB4KSAvIDIpKTtcbn1cbi5Ub3BQYWdlLUJ1c2luZXNzQ2FyZC1NZXRhZGF0YS1BY2NlbnQge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICNlNjUxMDA7XG59XG4uVG9wUGFnZS1CdXNpbmVzc0NhcmQtTWV0YWRhdGEtUmVtYXJrIHtcbiAgY29sb3I6ICNiMGIwYjA7XG59XG4iLCJDcm9zc0Jyb3dzZXJTdHlsZXNSZXNldCgpXHJcblxyXG4gIGh0bWwsXHJcbiAgYm9keSxcclxuICBkaXYsXHJcbiAgc3BhbixcclxuICBhcHBsZXQsXHJcbiAgb2JqZWN0LFxyXG4gIGlmcmFtZSxcclxuICBoMSxcclxuICBoMixcclxuICBoMyxcclxuICBoNCxcclxuICBoNSxcclxuICBoNixcclxuICBwLFxyXG4gIGJsb2NrcXVvdGUsXHJcbiAgcHJlLFxyXG4gIGEsXHJcbiAgYWJicixcclxuICBhY3JvbnltLFxyXG4gIGFkZHJlc3MsXHJcbiAgYmlnLFxyXG4gIGNpdGUsXHJcbiAgY29kZSxcclxuICBkZWwsXHJcbiAgZGZuLFxyXG4gIGVtLFxyXG4gIGltZyxcclxuICBpbnMsXHJcbiAga2JkLFxyXG4gIHEsXHJcbiAgcyxcclxuICBzYW1wLFxyXG4gIHNtYWxsLFxyXG4gIHN0cmlrZSxcclxuICBzdHJvbmcsXHJcbiAgc3ViLFxyXG4gIHN1cCxcclxuICB0dCxcclxuICB2YXIsXHJcbiAgYixcclxuICB1LFxyXG4gIGksXHJcbiAgY2VudGVyLFxyXG4gIGRsLFxyXG4gIGR0LFxyXG4gIGRkLFxyXG4gIG9sLFxyXG4gIHVsLFxyXG4gIGxpLFxyXG4gIGZpZWxkc2V0LFxyXG4gIGZvcm0sXHJcbiAgbGFiZWwsXHJcbiAgbGVnZW5kLFxyXG4gIHRhYmxlLFxyXG4gIGNhcHRpb24sXHJcbiAgdGJvZHksXHJcbiAgdGZvb3QsXHJcbiAgdGhlYWQsXHJcbiAgdHIsXHJcbiAgdGgsXHJcbiAgdGQsXHJcbiAgYXJ0aWNsZSxcclxuICBhc2lkZSxcclxuICBjYW52YXMsXHJcbiAgZGV0YWlscyxcclxuICBlbWJlZCxcclxuICBmaWd1cmUsXHJcbiAgZmlnY2FwdGlvbixcclxuICBmb290ZXIsXHJcbiAgaGVhZGVyLFxyXG4gIGhncm91cCxcclxuICBtZW51LFxyXG4gIG5hdixcclxuICBvdXRwdXQsXHJcbiAgcnVieSxcclxuICBzZWN0aW9uLFxyXG4gIHN1bW1hcnksXHJcbiAgdGltZSxcclxuICBtYXJrLFxyXG4gIGF1ZGlvLFxyXG4gIHZpZGVvXHJcblxyXG4gICAgbWFyZ2luIDBcclxuICAgIHBhZGRpbmcgMFxyXG4gICAgYm9yZGVyIDBcclxuICAgIGZvbnQtc2l6ZSAxMDAlXHJcbiAgICB2ZXJ0aWNhbC1hbGlnbiBiYXNlbGluZVxyXG5cclxuXHJcbiAgYXJ0aWNsZSxcclxuICBhc2lkZSxcclxuICBkZXRhaWxzLFxyXG4gIGZpZ2NhcHRpb24sXHJcbiAgZmlndXJlLFxyXG4gIGZvb3RlcixcclxuICBoZWFkZXIsXHJcbiAgaGdyb3VwLFxyXG4gIG1lbnUsXHJcbiAgbmF2LFxyXG4gIHNlY3Rpb24sXHJcbiAgbWFpblxyXG5cclxuICAgIGRpc3BsYXkgYmxvY2tcclxuXHJcblxyXG4gIGgxLFxyXG4gIGgyLFxyXG4gIGgzLFxyXG4gIGg0LFxyXG4gIGg1LFxyXG4gIGg2XHJcblxyXG4gICAgZm9udC13ZWlnaHQgbm9ybWFsXHJcblxyXG5cclxuICBib2R5XHJcblxyXG4gICAgbGluZS1oZWlnaHQgMVxyXG5cclxuXHJcbiAgb2wsXHJcbiAgdWxcclxuXHJcbiAgICBsaXN0LXN0eWxlIG5vbmVcclxuXHJcbiAgYVxyXG5cclxuICAgIHRleHQtZGVjb3JhdGlvbiBub25lXHJcbiAgICBjb2xvciAjMDAwXHJcbiAgICBvdXRsaW5lIG5vbmVcclxuXHJcblxyXG4gIGJsb2NrcXVvdGUsXHJcbiAgcVxyXG5cclxuICAgIHF1b3RlcyBub25lXHJcblxyXG5cclxuICAgICY6YmVmb3JlLFxyXG4gICAgJjphZnRlclxyXG5cclxuICAgICAgY29udGVudCAnJ1xyXG5cclxuXHJcbiAgdGFibGVcclxuXHJcbiAgICBib3JkZXItY29sbGFwc2UgY29sbGFwc2VcclxuICAgIGJvcmRlci1zcGFjaW5nIDBcclxuXHJcblxyXG4gIHRoXHJcblxyXG4gICAgZm9udC13ZWlnaHQgbm9ybWFsXHJcblxyXG5cclxuICAvLyBDaHJvbWVcclxuICBpbnB1dDpmb2N1cyxcclxuICBzZWxlY3Q6Zm9jdXMsXHJcbiAgdGV4dGFyZWE6Zm9jdXMsXHJcbiAgYnV0dG9uOmZvY3VzXHJcblxyXG4gICAgb3V0bGluZSBub25lXHJcblxyXG5cclxuICAvLyBGaXJlZm94XHJcbiAgaW5wdXRcclxuXHJcbiAgICBib3gtc2hhZG93IG5vbmVcclxuXHJcblxyXG4gIGhyXHJcblxyXG4gICAgYm9yZGVyLXdpZHRoIDBcclxuICAgIG1hcmdpbiAwXHJcbiIsIkluaXRpYWxHbG9iYWxDU1NfUnVsZXMoKVxyXG5cclxuICAqXHJcblxyXG4gICAgYm94LXNpemluZyBib3JkZXItYm94XHJcblxyXG5cclxuICBodG1sLFxyXG4gIGJvZHlcclxuXHJcbiAgICBoZWlnaHQgMTAwJVxyXG5cclxuXHJcbiAgaHRtbFxyXG5cclxuICAgIGZvbnQtZmFtaWx5IE1BSU5fRk9OVF9TVEFDS1xyXG4gICAgZm9udC1zaXplIEJBU0lDX0ZPTlRfU0laRVxyXG4gICAgbGluZS1oZWlnaHQgQkFTSUNfTElORV9IRUlHSFRcclxuXHJcblxyXG4gIHN1YlxyXG5cclxuICAgIG1hcmdpbi1sZWZ0IDFweFxyXG4gICAgdmVydGljYWwtYWxpZ24gc3ViXHJcbiAgICBmb250LXNpemUgMTBweFxyXG5cclxuXHJcbiAgc3VwXHJcblxyXG4gICAgbWFyZ2luLWxlZnQgMXB4XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbiBzdXBlclxyXG4gICAgZm9udC1zaXplIDEwcHhcclxuIiwiQHJlcXVpcmUgXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvQHlhbWF0by1kYWl3YS9mcm9udGVuZC9GdW5jdGlvbmFsaXR5LnN0eWxcIlxyXG5AcmVxdWlyZSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9AeWFtYXRvLWRhaXdhL2Zyb250ZW5kL0NvbXBvbmVudHMuc3R5bFwiXHJcblxyXG5cclxuQ3Jvc3NCcm93c2VyU3R5bGVzUmVzZXQoKVxyXG5Jbml0aWFsR2xvYmFsQ1NTX1J1bGVzKClcclxuXHJcblxyXG5AcmVxdWlyZSBcIi4uLy4uL0NvbXBvbmVudHMvQ29tcG9uZW50cy5zdHlsXCJcclxuXHJcblxyXG4uVG9wUGFnZVxyXG5cclxuICBmb250LWZhbWlseSBNZWlyeW8gVUksIHNhbnMtc2VyaWZcclxuXHJcbiAgZmlsbEJvZHlWZXJ0aWNhbGx5KHsgdmVydGljYWxTY3JvbGxpbmc6IHRydWUgfSlcclxuICBDZW50ZXJlcih7IG1pbmltYWxXaWR0aDogTkFSUk9XRVNUX1NDUkVFTl9XSURUSF9VTklULCBtYXhpbWFsV2lkdGg6IDMqTkFSUk9XRVNUX1NDUkVFTl9XSURUSF9VTklUIH0pXHJcblxyXG5cclxuICAmLUhlcm9JbWFnZVxyXG5cclxuICAgIFdJREVfU0NSRUVOU19DT05GSUdVUkFUSU9OX01JTklNQUxfV0lEVEggPSA1MDBweFxyXG5cclxuICAgIFdpZGVTY3JlZW5zQ29uZmlndXJhdGlvbigpXHJcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBXSURFX1NDUkVFTlNfQ09ORklHVVJBVElPTl9NSU5JTUFMX1dJRFRIKVxyXG4gICAgICAgIHtibG9ja31cclxuXHJcbiAgICBOYXJyb3dTY3JlZW5zQ29uZmlndXJhdGlvbigpXHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiBXSURFX1NDUkVFTlNfQ09ORklHVVJBVElPTl9NSU5JTUFMX1dJRFRIIC0gMSlcclxuICAgICAgICB7YmxvY2t9XHJcblxyXG5cclxuICAgIGJhY2tncm91bmQtc2l6ZSBjb3ZlclxyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQgbm8tcmVwZWF0XHJcblxyXG5cclxuICAgICtXaWRlU2NyZWVuc0NvbmZpZ3VyYXRpb24oKVxyXG5cclxuICAgICAgYXNwZWN0LXJhdGlvIDE5LzZcclxuICAgICAgYmFja2dyb3VuZC1pbWFnZSB1cmwoXCJUb3AvSW1hZ2VzL0hlcm9JbWFnZS1XaWRlU2NyZWVucy5wbmdcIik7XHJcblxyXG5cclxuICAgICtOYXJyb3dTY3JlZW5zQ29uZmlndXJhdGlvbigpXHJcblxyXG4gICAgICBhc3BlY3QtcmF0aW8gNC8zXHJcbiAgICAgIGJhY2tncm91bmQtaW1hZ2UgdXJsKFwiVG9wL0ltYWdlcy9IZXJvSW1hZ2UtTmFycm93U2NyZWVucy5wbmdcIik7XHJcblxyXG5cclxuICAmLUJ1c2luZXNzQ2FyZFxyXG5cclxuICAgIFBhZGRpbmdzKHsgaG9yaXpvbnRhbFN5bW1ldHJpYzogMTJweCB9KVxyXG5cclxuICAgIG1hcmdpbi10b3AgOHB4XHJcblxyXG5cclxuICAgICYtVG9wSGVhZGluZ1xyXG5cclxuICAgICAgZm9udC1zaXplIDI4cHhcclxuXHJcbiAgICAgIGZvbnQtd2VpZ2h0IGJvbGRcclxuICAgICAgY29sb3I6IE1hdGVyaWFsRGVzaWduQ29sb3JzLm9yYW5nZS5QOTAwXHJcblxyXG5cclxuICAgICYtU2xvZ2FuXHJcblxyXG4gICAgICBNdWx0aUxpbmVUZXh0RWxlbWVudE92ZXJmbG93U2FmZXR5V2l0aG91dEV4dHJhU3BhY2VDYXVzZWRCeUxpbmVIZWlnaHQoeyBmb250U2l6ZTogMThweCwgbGluZVNwYWNpbmc6IDRweCB9KVxyXG5cclxuICAgICAgZm9udC13ZWlnaHQgYm9sZFxyXG4gICAgICBjb2xvcjogTWF0ZXJpYWxEZXNpZ25Db2xvcnMub3JhbmdlLlA3MDBcclxuXHJcbiAgICAgIG1hcmdpbi10b3AgNnB4XHJcblxyXG5cclxuICAgICYtTWV0YWRhdGFcclxuXHJcbiAgICAgIGRpc3BsYXkgZ3JpZFxyXG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnMgYXV0byBtaW5tYXgoMCwgMWZyKVxyXG4gICAgICBncmlkLWdhcCA4cHhcclxuXHJcbiAgICAgIG1hcmdpbi10b3AgMTJweFxyXG5cclxuXHJcbiAgICAgIGR0XHJcblxyXG4gICAgICAgIGZvbnQtd2VpZ2h0IGJvbGRcclxuICAgICAgICBjb2xvcjogU2hhZGVzT2ZHcmF5X18zOUNvbG9yc1czQ19QYWxldHRlWzhdXHJcblxyXG4gICAgICAgIHRleHQtYWxpZ24gcmlnaHRcclxuXHJcblxyXG4gICAgICBkZFxyXG5cclxuICAgICAgICBNdWx0aUxpbmVUZXh0RWxlbWVudE92ZXJmbG93U2FmZXR5V2l0aG91dEV4dHJhU3BhY2VDYXVzZWRCeUxpbmVIZWlnaHQoeyBmb250U2l6ZTogMTRweCwgbGluZVNwYWNpbmc6IDRweCB9KVxyXG5cclxuICAgICAgICBjb2xvcjogU2hhZGVzT2ZHcmF5X18zOUNvbG9yc1czQ19QYWxldHRlWzEyXVxyXG5cclxuXHJcbiAgICAgICYtQWNjZW50XHJcblxyXG4gICAgICAgIGZvbnQtd2VpZ2h0IGJvbGRcclxuICAgICAgICBjb2xvcjogTWF0ZXJpYWxEZXNpZ25Db2xvcnMub3JhbmdlLlA5MDBcclxuXHJcblxyXG4gICAgICAmLVJlbWFya1xyXG5cclxuICAgICAgICBjb2xvcjogU2hhZGVzT2ZHcmF5X18zOUNvbG9yc1czQ19QYWxldHRlWzI0XVxyXG4iLCJmaWxsQm9keVZlcnRpY2FsbHkoY29tcG91bmRQYXJhbWV0ZXIsIHJlc3RQYXJhbWV0ZXJzX19NVVNUX05PVF9CRS4uLilcclxuXHJcbiAgdmFsaWRhdGVPYmplY3RUeXBlUGFyYW1ldGVyKHtcclxuICAgIG1peGluT3JGdW5jdGlvbk5hbWU6IFwiZmlsbEJvZHlWZXJ0aWNhbGx5XCIsXHJcbiAgICB0YXJnZXRQYXJhbWV0ZXJOdW1iZXI6IDEsXHJcbiAgICB0YXJnZXRQYXJhbWV0ZXI6IGNvbXBvdW5kUGFyYW1ldGVyLFxyXG4gICAgc2NoZW1hOiB7XHJcbiAgICAgIHZlcnRpY2FsU2Nyb2xsaW5nOiB7XHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLmJvb2xlYW5cclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIGZvbGxvd2luZ1BhcmFtZXRlcnNXaGljaE11c3ROb3RCZTogcmVzdFBhcmFtZXRlcnNfX01VU1RfTk9UX0JFXHJcbiAgfSlcclxuXHJcblxyXG4gIGhlaWdodCAxMDAlXHJcbiAgbWF4LWhlaWdodCAxMDAlXHJcblxyXG5cclxuICBpZiBjb21wb3VuZFBhcmFtZXRlci52ZXJ0aWNhbFNjcm9sbGluZ1xyXG5cclxuICAgIG92ZXJmbG93LXkgYXV0b1xyXG5cclxuICBlbHNlXHJcblxyXG4gICAgb3ZlcmZsb3cteSBoaWRkZW5cclxuIiwiQ2VudGVyZXIoY29tcG91bmRQYXJhbWV0ZXIgPSB7fSwgcmVzdFBhcmFtZXRlcnNfX01VU1RfTk9UX0JFLi4uKVxyXG5cclxuICB2YWxpZGF0ZU9iamVjdFR5cGVQYXJhbWV0ZXIoe1xyXG4gICAgbWl4aW5PckZ1bmN0aW9uTmFtZTogXCJDZW50ZXJlclwiLFxyXG4gICAgdGFyZ2V0UGFyYW1ldGVyTnVtYmVyOiAxLFxyXG4gICAgdGFyZ2V0UGFyYW1ldGVyOiBjb21wb3VuZFBhcmFtZXRlcixcclxuICAgIHNjaGVtYToge1xyXG4gICAgICBtaW5pbWFsV2lkdGg6IHtcclxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuZGltZW5zaW9uYWxBbW91bnQsXHJcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBOQVJST1dFU1RfU0NSRUVOX1dJRFRIX1VOSVRcclxuICAgICAgfSxcclxuICAgICAgbWF4aW1hbFdpZHRoOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLmRpbWVuc2lvbmFsQW1vdW50LFxyXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogMypOQVJST1dFU1RfU0NSRUVOX1dJRFRIX1VOSVRcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIGZvbGxvd2luZ1BhcmFtZXRlcnNXaGljaE11c3ROb3RCZTogcmVzdFBhcmFtZXRlcnNfX01VU1RfTk9UX0JFXHJcbiAgfSlcclxuXHJcblxyXG4gIHdpZHRoIDEwMCVcclxuICBtaW4td2lkdGg6IGNvbXBvdW5kUGFyYW1ldGVyLm1pbmltYWxXaWR0aFxyXG4gIG1heC13aWR0aDogY29tcG91bmRQYXJhbWV0ZXIubWF4aW1hbFdpZHRoXHJcblxyXG4gIG1hcmdpbi1sZWZ0IGF1dG9cclxuICBtYXJnaW4tcmlnaHQgYXV0b1xyXG4iLCJhcHBseUlmTm90TnVsbChrZXlBbmRWYWx1ZVBhaXJzKVxyXG5cclxuICBpZiBpc09iamVjdChrZXlBbmRWYWx1ZVBhaXJzKVxyXG5cclxuICAgIGZvciBrZXksIHZhbHVlIGluIGtleUFuZFZhbHVlUGFpcnNcclxuXHJcbiAgICAgIGlmIGlzTm90TnVsbCh2YWx1ZSlcclxuXHJcbiAgICAgICAge2tleX06IHZhbHVlXHJcbiIsIk11bHRpTGluZVRleHRFbGVtZW50T3ZlcmZsb3dTYWZldHlXaXRob3V0RXh0cmFTcGFjZUNhdXNlZEJ5TGluZUhlaWdodChjb21wb3VuZFBhcmFtZXRlciwgcmVzdFBhcmFtZXRlcnNfX01VU1RfTk9UX0JFLi4uKVxyXG5cclxuICB2YWxpZGF0ZU9iamVjdFR5cGVQYXJhbWV0ZXIoe1xyXG4gICAgbWl4aW5PckZ1bmN0aW9uTmFtZTogXCJNdWx0aUxpbmVUZXh0RWxlbWVudE92ZXJmbG93U2FmZXR5V2l0aG91dEV4dHJhU3BhY2VDYXVzZWRCeUxpbmVIZWlnaHRcIixcclxuICAgIHRhcmdldFBhcmFtZXRlck51bWJlcjogMSxcclxuICAgIHRhcmdldFBhcmFtZXRlcjogY29tcG91bmRQYXJhbWV0ZXIsXHJcbiAgICBzY2hlbWE6IHtcclxuICAgICAgZm9udFNpemU6IHtcclxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuZGltZW5zaW9uYWxBbW91bnQsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgfSxcclxuICAgICAgbGluZUhlaWdodDoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5kaW1lbnNpb25hbEFtb3VudCBEYXRhVHlwZXMuZGltZW5zaW9ubGVzc0Ftb3VudCxcclxuICAgICAgICByZXF1aXJlZDogZmFsc2VcclxuICAgICAgfSxcclxuICAgICAgbGluZVNwYWNpbmc6IHtcclxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuZGltZW5zaW9uYWxBbW91bnQgRGF0YVR5cGVzLmRpbWVuc2lvbmxlc3NBbW91bnQsXHJcbiAgICAgICAgcmVxdWlyZWRJZjoge1xyXG4gICAgICAgICAgcHJlZGljYXRlOiBAKGNvbXBvdW5kUGFyYW1ldGVyKSB7IHJldHVybiBpc051bGwoY29tcG91bmRQYXJhbWV0ZXIubGluZUhlaWdodCkgfSxcclxuICAgICAgICAgIGRlc2NyaXB0aW9uRm9yTG9nZ2luZzogXCJUaGUgJ2xpbmVIZWlnaHQnIGlzIG5vdCBzcGVjaWZpZWRcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaW5jb21wYXRpYmxlV2l0aDogXCJsaW5lSGVpZ2h0XCJcclxuICAgICAgfSxcclxuICAgICAgZG9Ob3RVc2VQc2V1ZG9FbGVtZW50czoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5ib29sZWFuLFxyXG4gICAgICAgIHJlcXVpcmVkOiBmYWxzZVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgZm9sbG93aW5nUGFyYW1ldGVyc1doaWNoTXVzdE5vdEJlOiByZXN0UGFyYW1ldGVyc19fTVVTVF9OT1RfQkVcclxuICB9KVxyXG5cclxuXHJcbiAgZm9udFNpemUgPSBjb21wb3VuZFBhcmFtZXRlci5mb250U2l6ZVxyXG5cclxuICBsaW5lSGVpZ2h0ID0gaXNOb3ROdWxsKGNvbXBvdW5kUGFyYW1ldGVyLmxpbmVIZWlnaHQpID8gY29tcG91bmRQYXJhbWV0ZXIubGluZUhlaWdodCA6XFxcclxuICAgICAgZ2V0TGluZUhlaWdodEJ5Rm9udFNpemVBbmRMaW5lU3BhY2luZyh7XHJcbiAgICAgICAgZm9udFNpemU6IGZvbnRTaXplLFxyXG4gICAgICAgIGxpbmVTcGFjaW5nOiBjb21wb3VuZFBhcmFtZXRlci5saW5lU3BhY2luZ1xyXG4gICAgICB9KVxyXG5cclxuICBsaW5lSGVpZ2h0X19kaW1lbnNpb25hbEFtb3VudCA9IG51bGxcclxuICBpc0xpbmVIZWlnaHRUaGVEaW1lbnNpb25hbEFtb3VudCA9IGlzRGltZW5zaW9uYWxBbW91bnQobGluZUhlaWdodCwgeyBjb25zaWRlckRpbWVuc2lvbmxlc3NaZXJvQXNEaW1lbnNpb25hbEFtb3VudDogZmFsc2UgfSlcclxuXHJcbiAgaWYgaXNMaW5lSGVpZ2h0VGhlRGltZW5zaW9uYWxBbW91bnRcclxuXHJcbiAgICBsaW5lSGVpZ2h0X19kaW1lbnNpb25hbEFtb3VudCA9IGxpbmVIZWlnaHRcclxuXHJcbiAgZWxzZSBpZiBpc0RpbWVuc2lvbmxlc3NBbW91bnQobGluZUhlaWdodClcclxuXHJcbiAgICBsaW5lSGVpZ2h0X19kaW1lbnNpb25hbEFtb3VudCA9IGxpbmVIZWlnaHQgKiBmb250U2l6ZVxyXG5cclxuICBlbHNlXHJcblxyXG4gICAgbGluZUhlaWdodF9fZGltZW5zaW9uYWxBbW91bnQgPSBsaW5lSGVpZ2h0XHJcblxyXG5cclxuICBsaW5lU3BhY2luZyA9IGlzTm90TnVsbChjb21wb3VuZFBhcmFtZXRlci5saW5lU3BhY2luZykgPyBjb21wb3VuZFBhcmFtZXRlci5saW5lU3BhY2luZyA6XFxcclxuICAgICAgZ2V0TGluZVNwYWNpbmdCeUZvbnRTaXplQW5kTGluZUhlaWdodCh7XHJcbiAgICAgICAgZm9udFNpemU6IGZvbnRTaXplLFxyXG4gICAgICAgIGxpbmVIZWlnaHQ6IGNvbXBvdW5kUGFyYW1ldGVyLmxpbmVIZWlnaHRcclxuICAgICAgfSlcclxuXHJcbiAgZG9Ob3RVc2VQc2V1ZG9FbGVtZW50cyA9IGNvbXBvdW5kUGFyYW1ldGVyLmRvTm90VXNlUHNldWRvRWxlbWVudHNcclxuXHJcbiAgZXh0cmFTcGFjZUNhdXNlZEJ5TGluZUhlaWdodEF0VG9wT3JCb3R0b20gPSBidWlsZENhbGNFeHByZXNzaW9uKFxyXG4gICAgXCIoJHtsaW5lSGVpZ2h0X19kaW1lbnNpb25hbEFtb3VudH0gLSAke2ZvbnRTaXplfSkgLyAyXCIsXHJcbiAgICB7IGxpbmVIZWlnaHRfX2RpbWVuc2lvbmFsQW1vdW50OiBsaW5lSGVpZ2h0X19kaW1lbnNpb25hbEFtb3VudCwgZm9udFNpemU6IGZvbnRTaXplIH1cclxuICApXHJcblxyXG4gIHRvcE9yQm90dG9tTWFyZ2luVmFsdWUgPSBidWlsZENhbGNFeHByZXNzaW9uKFxyXG4gICAgXCItMSAqICR7ZXh0cmFTcGFjZUNhdXNlZEJ5TGluZUhlaWdodEF0VG9wT3JCb3R0b219XCIsXHJcbiAgICB7IGV4dHJhU3BhY2VDYXVzZWRCeUxpbmVIZWlnaHRBdFRvcE9yQm90dG9tOiBleHRyYVNwYWNlQ2F1c2VkQnlMaW5lSGVpZ2h0QXRUb3BPckJvdHRvbSB9XHJcbiAgKVxyXG5cclxuXHJcbiAgZm9udC1zaXplIGZvbnRTaXplXHJcbiAgbGluZS1oZWlnaHQgbGluZUhlaWdodFxyXG4gIHdvcmQtYnJlYWsgYnJlYWstYWxsXHJcblxyXG5cclxuICBpZiBkb05vdFVzZVBzZXVkb0VsZW1lbnRzXHJcblxyXG4gICAgbWFyZ2luLXRvcCB0b3BPckJvdHRvbU1hcmdpblZhbHVlXHJcbiAgICBtYXJnaW4tYm90dG9tIHRvcE9yQm90dG9tTWFyZ2luVmFsdWVcclxuXHJcbiAgZWxzZVxyXG5cclxuICAgICY6YmVmb3JlXHJcblxyXG4gICAgICBjb250ZW50ICcnXHJcbiAgICAgIGRpc3BsYXkgYmxvY2tcclxuICAgICAgbWFyZ2luLXRvcCB0b3BPckJvdHRvbU1hcmdpblZhbHVlXHJcblxyXG5cclxuICAgICY6YWZ0ZXJcclxuXHJcbiAgICAgIGNvbnRlbnQgJydcclxuICAgICAgZGlzcGxheSBibG9ja1xyXG4gICAgICBtYXJnaW4tYm90dG9tIHRvcE9yQm90dG9tTWFyZ2luVmFsdWVcclxuIl19 */
